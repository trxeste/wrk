
==================== FINAL INTERFACE ====================
2016-12-22 20:15:41.729889 UTC

interface myBlo_IG061QfCLdFHAMguwEWLVk:Handler.PostNew 7103
  interface hash: e7ded0daf747b911a29593a433784160
  ABI hash: ff70a68e381ca6f45b3754fae78731e3
  export-list hash: 26c85e3cb6c1f1f22824f53cfd101af5
  orphan hash: 466ebcef1d645d55b2c6d2a11c954c12
  flag hash: 4e5d95d70d383f80ca42699834978be5
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handler.PostNew.blogPostForm
  Handler.PostNew.getPostNewR
  Handler.PostNew.postPostNewR
module dependencies: Foundation Import Import.NoFoundation Model
                     Settings Settings.StaticFiles
package dependencies: ReadArgs-1.2.2@ReadA_6cFSpvK65fZLeOKMWH0GL4
                      StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      adjunctions-4.3@adjun_9cH29t7MfJW4aX0z24PvBh
                      aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv
                      aeson-compat-0.3.2.0@aeson_I6sLdLpsTWlBpPQ6k8hVao
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      asn1-encoding-0.9.3@asn1e_A0jeMIoYyiZ4PSPkybrUpF
                      asn1-parse-0.9.4@asn1p_LrLFPvrxagO8jGmFd1SmqK
                      asn1-types-0.3.2@asn1t_BR43uodYA6j1oMVNuWbt5p
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy
                      attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3
                      authenticate-1.3.3.1@authe_5I9KeJku40C2DZmLJuNDwi
                      auto-update-0.1.3.1@autou_JxODiy791X7A5hkNmGN2Ed base-4.8.2.0
                      base16-bytestring-0.1.1.6@base1_LuxBhYgEONMHJnKTOPc7Oy
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      basic-prelude-0.5.1@basic_6MJWJCVkTz8FGKC6mXGpJH
                      bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-html-0.8.1.1@blaze_1fCoF4onMJE2jDLBViwynk
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      blaze-markup-0.7.0.3@blaze_JGtgJgx8yqB3DdKuU3sbgD
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_8joO9kPGMysIcGsv22FmhM
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      chunked-data-0.2.0@chunk_EAy8NibgHTSDpZrM8uyA6o
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      classy-prelude-yesod-0.12.7@class_0wrG3GT9yLn2V9rxymUD3B
                      classy-prelude-0.12.7@class_3R776uRoSPG5joMjoZAPrW
                      classy-prelude-conduit-0.12.7@class_EdzzbbBH3W89yShhiwXXf6
                      clientsession-0.9.1.1@clien_5voyFsgo1EG4Zcy2KTreld
                      comonad-4.2.7.2@comon_ANDyj4wNB0X1DshTxn1Ec7
                      conduit-1.2.6.4@condu_1EneW8yRsjj18l2EfcgLyu
                      conduit-combinators-1.0.3.1@condu_JKMGcWcFGFA2sFIrnxo4bk
                      conduit-extra-1.1.13.1@condu_K5a53Tkcwf93kOHQXIVa9v
                      connection-0.2.5@conne_CPlZYPymstgEi3k2iqPu1A
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_GjopTtscFPI3wCyb9R8zUx
                      cookie-0.4.2@cooki_HgYmE0LnTLQI3ZHrNmxIUf
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      crypto-api-0.13.2@crypt_2BEYKdRP8nrKGHynW1FWqA
                      cryptohash-0.11.6@crypt_3Cwvwq9ssRY1dmVI1qI6C2
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      cryptohash-conduit-0.1.1@crypt_821POYnlwddKxIrqPneQYZ
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      cryptonite-0.15@crypt_L54bEzjjfqRAdndSHnCcSo
                      css-text-0.1.2.1@csste_DCmJgQlbndx5J1dp3gjSY0
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      dlist-instances-0.1@dlist_DzoO0ir6YuEEKWgnOxUPdi
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_852PUaAoFuMCJCuSp1iWYg
                      enclosed-exceptions-1.0.1.1@enclo_61GxiLion2dCYbPqCQEfDj
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.5@fastl_7EbVwtKgfIp7Dz8DZ2fSbo
                      file-embed-0.0.10@filee_BNyHeBYneTRAp0kIbc1T1P
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m
                      free-4.12.4@free_6zsT0eU8oWW5hSQkbU0iac ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      hjsmin-0.1.5.3@hjsmi_4Le5ygNQDYyIUo0wkNPPsi
                      hourglass-0.2.10@hourg_LCfvpegcEVDEeuH0foNCGl
                      http2-1.4.5@http2_DoxR3dWy5TOCdpHywL3J3q
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-conduit-2.1.10@httpc_GhR0bWaf6QcK4bv8TSDfYY
                      http-client-tls-0.2.4@httpc_IDaT9R5ualJH8nkIuob0gS
                      http-client-0.4.28@httpc_KOR3skrgzbXGs0H4TPJO7d
                      http-date-0.0.6.1@httpd_5DCnWjYhsQa9SYTqbDecLX
                      http-types-0.9@httpt_GVuxyBdW2yt88cWrjZfRWC integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      kan-extensions-4.2.3@kanex_93YChxpKCPfJOIja4yoAht
                      keys-3.11@keys_K60lYwyibCxDqddDC3Eu8A
                      language-javascript-0.5.14.7@langu_KruEjtUttmXAJAZQSo5Rlj
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      markdown-0.1.14@markd_GDrZj2TSHkx8wTsi14rFWS
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mime-types-0.1.0.7@mimet_EkzgPOw2pX43Kgu0zxtOKD
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-logger-0.3.18@monad_F14WoEERnInG1mlgWNKXjm
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mono-traversable-0.10.2@monot_H8KTtbZdYctIuu4oYwulw6
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.9@parse_7aUabKPjr5W6Al5Ge35AQl
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      pem-0.2.2@pem_68T9LQQkAB02O0OO4VHaxc
                      persistent-template-2.1.8@persi_1YstQuqbhQq3eJByTyjnHX
                      persistent-sqlite-2.2.1@persi_2oZxCHdcTnVEoe52IflmwF
                      persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn
                      pointed-4.2.0.2@point_9sEXBlHmRToHa7d51W4kyh
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      profunctors-5.2@profu_3mp9Et5di2eBw26qSk1FvQ
                      psqueues-0.2.2.1@psque_AvLcbKUIB1yCm8wZoS0YR7
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0
                      semigroupoids-5.0.1@semig_GGZAZT6nvE937zJVPqetuF
                      shakespeare-2.0.8.2@shake_7VYGAcSKdrrBmHx0MGxhaZ
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.21@simpl_1s4YZSsjn6TCbK7MVn1EXz
                      skein-1.0.9.4@skein_Er8QdQfWtp79PgFByyaiMF
                      socks-0.5.4@socks_BZJ6e1EePGtK56UKTxGOcA
                      split-0.2.3@split_CDzOynTh4l8Ahg1HaWUL4Z
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.4@strea_FDgjqa6CVPZ2zy4YbsUfKW
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      system-filepath-0.4.13.4@syste_0e3pMPmZzix21iFp2U03Lc
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      tagsoup-0.13.9@tagso_3I5x83DoCVBIz4INMBLU3R
                      tagstream-conduit-0.5.5.3@tagst_LeUcVHcdDB7DGEGaet78H7
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      tls-1.3.5@tls_BLj5e033gbt9i7tk5Yps1o
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-algorithms-0.7.0.1@vecto_2O3XZ6glbAwDmJCc3dC3Ee
                      vector-instances-3.3.1@vecto_845LIf6gX4KCXOevED3Jnk
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_0sX35KG3ls0DbfkAiL2KUt
                      wai-app-static-3.1.5@waiap_GvcjPennmGr8pi7bwAoBlW
                      wai-extra-3.0.15.1@waiex_HVeMJPtNVePGVRPKEHPQr1
                      wai-logger-2.2.7@wailo_IcrrlFmNXauB4UPZCjpd6d
                      warp-3.2.2@warp_AahrN39wH0hHc9O5rjZ6vl
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      x509-1.6.3@x509_4sohhVXlbMC8SF2GurdHkx
                      x509-system-1.6.3@x509s_0Oviz41trO97jvoyFU0qDJ
                      x509-store-1.6.1@x509s_6Wx59kr9xRdIuL4Mc7bQEk
                      x509-validation-1.6.3@x509v_3l4xKAMlxjiKNrLsfSSUwO
                      xml-conduit-1.3.4.2@xmlco_AQbRMAGVOZVF9hzRguQuqW
                      xml-types-0.3.6@xmlty_Ig8FQkC5nvD44nK4uZknsI
                      xss-sanitize-0.3.5.7@xsssa_1xOkYBWysHDFpCHMd3AfbR
                      yaml-0.8.17.1@yaml_CQqYkPDsrNU0KjJVlbrxLm
                      yesod-newsfeed-1.5@yesod_1zwErDEgrvDEi9v2PTJqSN
                      yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th
                      yesod-1.4.3@yesod_3jIdEn8zAkXAkLgjeDRLbF
                      yesod-static-1.5.0.3@yesod_8pNRplMrDA33lWABw0vm9E
                      yesod-text-markdown-0.1.8@yesod_Cm0RZh7iLuULP675cdwT8w
                      yesod-form-1.4.7.1@yesod_FpUM6RmBwEg1kXFnLMKTSu
                      yesod-persistent-1.4.0.5@yesod_HW3NzezVHDg7dZuG9jbAGD
                      yesod-auth-1.4.13.2@yesod_LJuhrWgdQJcGm2RcI87vyB
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Instances
         aeson-compat-0.3.2.0@aeson_I6sLdLpsTWlBpPQ6k8hVao:Data.Aeson.Compat
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_2BEYKdRP8nrKGHynW1FWqA:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         dlist-instances-0.1@dlist_DzoO0ir6YuEEKWgnOxUPdi:Data.DList.Instances
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         http-client-0.4.28@httpc_KOR3skrgzbXGs0H4TPJO7d:Network.HTTP.Client.Request
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.8@persi_1YstQuqbhQq3eJByTyjnHX:Database.Persist.TH
         persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         system-filepath-0.4.13.4@syste_0e3pMPmZzix21iFp2U03Lc:Filesystem.Path
         system-filepath-0.4.13.4@syste_0e3pMPmZzix21iFp2U03Lc:Filesystem.Path.CurrentOS
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-instances-3.3.1@vecto_845LIf6gX4KCXOevED3Jnk:Data.Vector.Instances
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
         yesod-text-markdown-0.1.8@yesod_Cm0RZh7iLuULP675cdwT8w:Yesod.Text.Markdown
         yesod-auth-1.4.13.2@yesod_LJuhrWgdQJcGm2RcI87vyB:Yesod.Auth
family instance modules: adjunctions-4.3@adjun_9cH29t7MfJW4aX0z24PvBh:Data.Functor.Rep
                         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Wrapped
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_852PUaAoFuMCJCuSp1iWYg:Text.Email.Parser
                         http-client-0.4.28@httpc_KOR3skrgzbXGs0H4TPJO7d:Network.HTTP.Client
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         keys-3.11@keys_K60lYwyibCxDqddDC3Eu8A:Data.Key
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         monad-logger-0.3.18@monad_F14WoEERnInG1mlgWNKXjm:Control.Monad.Logger
                         mono-traversable-0.10.2@monot_H8KTtbZdYctIuu4oYwulw6:Data.Containers
                         mono-traversable-0.10.2@monot_H8KTtbZdYctIuu4oYwulw6:Data.MinLen
                         mono-traversable-0.10.2@monot_H8KTtbZdYctIuu4oYwulw6:Data.MonoTraversable
                         mono-traversable-0.10.2@monot_H8KTtbZdYctIuu4oYwulw6:Data.Sequences
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.BRef
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.Class
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.DLList
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.Deque
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.PRef
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.SRef
                         mutable-containers-0.3.2.1@mutab_CV6GLY9ePAIJvWpAeaZzZT:Data.Mutable.URef
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         myBlo_IG061QfCLdFHAMguwEWLVk:Foundation
                         myBlo_IG061QfCLdFHAMguwEWLVk:Model
                         network-uri-2.6.1.0@netwo_DarCcUHK1BCJHlIYOjXe67:Network.URI
                         persistent-sqlite-2.2.1@persi_2oZxCHdcTnVEoe52IflmwF:Database.Persist.Sqlite
                         persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn:Database.Persist.Sql.Orphan.PersistStore
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.3@resou_0TYP6GHqv9b1qNv0xS98eJ:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.List.NonEmpty
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.Semigroup
                         shakespeare-2.0.8.2@shake_7VYGAcSKdrrBmHx0MGxhaZ:Text.Css
                         shakespeare-2.0.8.2@shake_7VYGAcSKdrrBmHx0MGxhaZ:Text.Shakespeare
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         vector-instances-3.3.1@vecto_845LIf6gX4KCXOevED3Jnk:Data.Vector.Instances
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         xml-types-0.3.6@xmlty_Ig8FQkC5nvD44nK4uZknsI:Data.XML.Types
                         yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th:Yesod.Core.Types
                         yesod-static-1.5.0.3@yesod_8pNRplMrDA33lWABw0vm9E:Yesod.Static
                         yesod-auth-1.4.13.2@yesod_LJuhrWgdQJcGm2RcI87vyB:Yesod.Auth
                         yesod-auth-1.4.13.2@yesod_LJuhrWgdQJcGm2RcI87vyB:Yesod.Auth.Routes
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  blaze-html-0.8.1.1@blaze_1fCoF4onMJE2jDLBViwynk:Text.Blaze.Html d0ae3497a2fc72a7a21440107f44681b
import  -/  blaze-markup-0.7.0.3@blaze_JGtgJgx8yqB3DdKuU3sbgD:Text.Blaze.Internal 1243edfb11ea7add4706ea946beca5d6
import  -/  Foundation 4579b3e725748a47c7973714f3b05955
  Handler 06a422e359bd9ceb1934dc63dbe67a8b
  PostDetailsR 3adb4f5415075894c69a82cbc88b4d0f
  PostNewR 061b71bbeed272fec0fe1a28618699ff
import  -/  Import d2f75212f99695c6bea9d17b9d6c8508
  exports: 7d80ba28b5e0bfd28705f7d0d2ff560d
import  -/  Model b3d0f86f14ce0ee740796ec3f89e7c22
  BlogPost 8fab1cd140885a618ab29b3f6641b388
  BlogPost 101317604e61dbbda7d0cecc8fc2982f
import  -/  Settings c2ac9d6b604f25dd1e3c1f2905a5757c
  widgetFile 7b556da2b166829f84550e7e62cb42e9
import  -/  persistent-2.2.4.1@persi_3s73nN6hgVFJ8EHwgLnxcn:Database.Persist.Class.PersistStore 0a6ef7965264509239e2464fc590d0d8
import  -/  shakespeare-2.0.8.2@shake_7VYGAcSKdrrBmHx0MGxhaZ:Text.Css 0d8df6bef706e340bf590a53b7b70b7d
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text e078666d8af3db638df624950dd60de0
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th:Yesod.Core.Class.Yesod b7b2b7aedac9d0ef65c3922266ea8828
import  -/  yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th:Yesod.Core.Handler b3d0766b503503e4841e8e2ed6cd4ed1
import  -/  yesod-core-1.4.20.2@yesod_29kqyikkwsMEYxI3Ma06th:Yesod.Core.Widget 3e80cc5c8272c804c3b53c9796ba4a38
import  -/  yesod-text-markdown-0.1.8@yesod_Cm0RZh7iLuULP675cdwT8w:Yesod.Text.Markdown e3df1a685a7b894f44b4c92bc5e4a28a
import  -/  yesod-form-1.4.7.1@yesod_FpUM6RmBwEg1kXFnLMKTSu:Yesod.Form.Bootstrap3 f0beb20c1434bdc37c9e13d386f204e8
import  -/  yesod-form-1.4.7.1@yesod_FpUM6RmBwEg1kXFnLMKTSu:Yesod.Form.Fields 1905daeca556d97cbb92be9b1dd898ba
import  -/  yesod-form-1.4.7.1@yesod_FpUM6RmBwEg1kXFnLMKTSu:Yesod.Form.Functions 576900213f28f4c0f1ae75fb718c1d36
import  -/  yesod-form-1.4.7.1@yesod_FpUM6RmBwEg1kXFnLMKTSu:Yesod.Form.Types 27de870dd6c92ee2e396c8be8bd6f217
import  -/  yesod-persistent-1.4.0.5@yesod_HW3NzezVHDg7dZuG9jbAGD:Yesod.Persist.Core 027f199f54448479aceeefa852d0589c
addDependentFile "templates/posts/new.lucius"
addDependentFile "templates/posts/new.hamlet"
addDependentFile "templates/posts/new.lucius"
addDependentFile "templates/posts/new.hamlet"
3dab4d2e0ebd8c02c9a951309ee255c1
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp_$s$fMonadHandlerT -}
cb86455d408a05c65cde3714891f3f9c
  $smarkdownField ::
    Yesod.Form.Types.Field Foundation.Handler Text.Markdown.Markdown
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Text.Markdown.Markdown
                   (\ w3 :: [Data.Text.Internal.Text]
                      w4 :: [Yesod.Core.Types.FileInfo] ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ Yesod.Form.Types.FormMessage
                      @ Text.Markdown.Markdown
                      @ Foundation.Handler
                      @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                      Handler.PostNew.$s$fFunctorAForm1
                      Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <Foundation.App>_N <GHC.Types.IO>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      Yesod.Text.Markdown.markdownField26
                      w3)
                   (Yesod.Text.Markdown.markdownField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
50f9986419bf46cd1b0965b76291d94d
  $stextField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   (\ w3 :: [Data.Text.Internal.Text]
                      w4 :: [Yesod.Core.Types.FileInfo] ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      @ Foundation.Handler
                      @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                      Handler.PostNew.$s$fFunctorAForm1
                      Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <Foundation.App>_N <GHC.Types.IO>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      w3)
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
acfd2051ba1db94ae04967a03ee937d9
  $stoWidget4 ::
    Yesod.Core.Types.RY Foundation.App
    ~ Yesod.Core.Types.RY Foundation.App
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Yesod.Core.Types.RY Foundation.App)
                   @ (Yesod.Core.Types.RY Foundation.App)
                   @~ <Yesod.Core.Types.RY Foundation.App>_N) -}
9c7d230f8f343f271c64455d88a61d17
  blogPostForm ::
    Yesod.Form.Types.AForm Foundation.Handler Model.BlogPost
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.PostNew.blogPostForm1
                  `cast`
                (Sym (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                          <Model.BlogPost>_N)) -}
ffd753867119ce74827f95ab9c8404c5
  blogPostForm1 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Model.BlogPost,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   Foundation.$fYesodApp_$s$fMonadHandlerT
                   @ Text.Markdown.Markdown
                   @ Model.BlogPost
                   Handler.PostNew.blogPostForm6
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Text.Markdown.Markdown -> Model.BlogPost>_N))
                   Handler.PostNew.blogPostForm2
                   w4
                   w5
                   w6) -}
9df8ff00f19799f99f5f0345f5e5f436
  blogPostForm2 ::
    Yesod.Form.Types.AForm Foundation.Handler Text.Markdown.Markdown
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Text.Markdown.Markdown
                   @ Foundation.App
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                      @ Foundation.App
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.App>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                   Handler.PostNew.$smarkdownField
                   Handler.PostNew.blogPostForm3
                   (GHC.Base.Nothing @ Text.Markdown.Markdown)) -}
ff0d57936dad7fd7446a3ff2b946e5cc
  blogPostForm3 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.PostNew.blogPostForm4
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Yesod.Form.Bootstrap3.bfs1) -}
e4944836208e019879fc57886d1e14f4
  blogPostForm4 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.PostNew.blogPostForm5) -}
f00349556109bb4b4fa26975c326e766
  blogPostForm5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Article"#) -}
48206cd733370521fd94b05dd41b83b8
  blogPostForm6 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Text.Markdown.Markdown -> Model.BlogPost),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta1 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta2 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.App
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handler.PostNew.blogPostForm_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta1
                       eta2
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.App>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Text.Markdown.Markdown -> Model.BlogPost)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Text.Markdown.Markdown -> Model.BlogPost)
                             errs
                        Yesod.Form.Types.FormSuccess a30
                        -> Yesod.Form.Types.FormSuccess
                             @ (Text.Markdown.Markdown -> Model.BlogPost)
                             (Model.$WBlogPost a30) },
                      x,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Text.Markdown.Markdown -> Model.BlogPost),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.App GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.App GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.App>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Text.Markdown.Markdown -> Model.BlogPost),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.App GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
d5c000116569eafc36fab3f8f172a5b5
  blogPostForm7 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.PostNew.blogPostForm8
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Yesod.Form.Bootstrap3.bfs1) -}
56ca15afca0c64e82383703ff6c065d6
  blogPostForm8 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.PostNew.blogPostForm9) -}
ac5cecf9c62d516fc965791bf4b47b1a
  blogPostForm9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Title"#) -}
7c00c95893b4d4da73b259333b9945d1
  blogPostForm_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.App
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                      @ Foundation.App
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.App>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                   Handler.PostNew.$stextField
                   Handler.PostNew.blogPostForm7
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
d26f4eef09a351ce10170373aa07181c
  getPostNewR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.PostNew.getPostNewR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
1331a915a44e3d7846d4978cd3531a91
  getPostNewR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handler.PostNew.getPostNewR39
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO (),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO (),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 Foundation.$fYesodApp42
                   (let {
                      x :: Text.Blaze.Html.Html
                      = case enctype of wild1 {
                          Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                          Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                    } in
                    let {
                      a5 :: Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
                        {- Arity: 1 -}
                      = \ ds :: Yesod.Core.Types.RY Foundation.App -> x
                    } in
                    let {
                      a6 :: Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route Foundation.App)
                      = Yesod.Core.Types.GWData
                          @ (Yesod.Routes.Class.Route Foundation.App)
                          a5
                            `cast`
                          (Sym (Yesod.Core.Types.NTCo:Body[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                          (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                            `cast`
                          (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Script
                                  (Yesod.Routes.Class.Route Foundation.App)])
                            `cast`
                          (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                    <Yesod.Core.Types.Script
                                       (Yesod.Routes.Class.Route Foundation.App)>_R))
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Stylesheet
                                  (Yesod.Routes.Class.Route Foundation.App)])
                            `cast`
                          (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                    <Yesod.Core.Types.Stylesheet
                                       (Yesod.Routes.Class.Route Foundation.App)>_R))
                          (Data.Map.Base.Tip
                             @ (GHC.Base.Maybe Data.Text.Internal.Text)
                             @ ((Yesod.Routes.Class.Route Foundation.App
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Data.Text.Internal.Builder.Builder))
                          (GHC.Base.Nothing
                             @ ((Yesod.Routes.Class.Route Foundation.App
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Text.Julius.Javascript))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Yesod.Core.Types.NTCo:Head[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                    } in
                    let {
                      lvl13 :: ((),
                                Yesod.Core.Types.GWData
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                      = (GHC.Tuple.(),
                         a6
                           `cast`
                         (Yesod.Core.Types.GWData
                            (Yesod.Routes.Class.Route
                               (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N)))_R)_R)
                    } in
                    let {
                      a7 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetT
                                              Foundation.App GHC.Types.IO)))) #)
                        {- Arity: 2, Strictness: <L,A><L,U>,
                           Unfolding: InlineRule (2, True, False)
                                      (\ eta :: Yesod.Core.Types.HandlerData
                                                  Foundation.App
                                                  (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                         eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                       (# eta1,
                                          (GHC.Tuple.(),
                                           (Yesod.Core.Types.GWData
                                              @ (Yesod.Routes.Class.Route Foundation.App)
                                              (\ ds :: Yesod.Core.Types.RY Foundation.App -> x)
                                                `cast`
                                              (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                        <Yesod.Routes.Class.Route
                                                           Foundation.App>_R))
                                              (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                `cast`
                                              (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                              (GHC.Base.id
                                                 @ [Yesod.Core.Types.Script
                                                      (Yesod.Routes.Class.Route Foundation.App)])
                                                `cast`
                                              (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                        <Yesod.Core.Types.Script
                                                           (Yesod.Routes.Class.Route
                                                              Foundation.App)>_R))
                                              (GHC.Base.id
                                                 @ [Yesod.Core.Types.Stylesheet
                                                      (Yesod.Routes.Class.Route Foundation.App)])
                                                `cast`
                                              (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                        <Yesod.Core.Types.Stylesheet
                                                           (Yesod.Routes.Class.Route
                                                              Foundation.App)>_R))
                                              (Data.Map.Base.Tip
                                                 @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text)
                                                    -> Data.Text.Internal.Builder.Builder))
                                              (GHC.Base.Nothing
                                                 @ ((Yesod.Routes.Class.Route Foundation.App
                                                     -> [(Data.Text.Internal.Text,
                                                          Data.Text.Internal.Text)]
                                                     -> Data.Text.Internal.Text)
                                                    -> Text.Julius.Javascript))
                                              (Yesod.Core.Types.$fApplicativeWidgetT2
                                                 @ (Yesod.Routes.Class.Route Foundation.App))
                                                `cast`
                                              (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                        <Yesod.Routes.Class.Route
                                                           Foundation.App>_R)))
                                             `cast`
                                           (Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route
                                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                           <Foundation.App>_N
                                                           <GHC.Types.IO>_N)))_R)_R) #)) -}
                      = \ eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                          eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                        (# eta1, lvl13 #)
                    } in
                    let {
                      a8 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 1, Strictness: <L,1*U(U,U,U,1*H,U)>,
                           Unfolding: InlineRule (1, True, False)
                                      (\ eta1 :: Yesod.Core.Types.HandlerData
                                                   Foundation.App
                                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                                       widget
                                         `cast`
                                       (Trans
                                            (Yesod.Core.Types.NTCo:WidgetT[0]
                                                 (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                           <Foundation.App>_N <GHC.Types.IO>_N))
                                                 <GHC.Types.IO>_N
                                                 <()>_N)
                                            ((Yesod.Core.Types.HandlerData
                                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                     <Foundation.App>_N <GHC.Types.IO>_N)
                                                (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                                             ->_R (GHC.Types.IO
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.App>_N
                                                                  <GHC.Types.IO>_N))_R)_R))_R)_R))
                                         (case eta1 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                          Yesod.Core.Types.HandlerData
                                            @ Foundation.App
                                            @ ()
                                            ds
                                            ds2
                                            dt
                                            (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                               @ Foundation.App)
                                            dt1 })) -}
                      = \ eta1 :: Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                        widget
                          `cast`
                        (Trans
                             (Yesod.Core.Types.NTCo:WidgetT[0]
                                  (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                            <Foundation.App>_N <GHC.Types.IO>_N))
                                  <GHC.Types.IO>_N
                                  <()>_N)
                             ((Yesod.Core.Types.HandlerData
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N)
                                 (Sub (Yesod.Core.Types.TFCo:R:MonadRouteIO[0])))_R
                              ->_R (GHC.Types.IO
                                      ((<()>_R,
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                   <Foundation.App>_N
                                                   <GHC.Types.IO>_N))_R)_R))_R)_R))
                          (case eta1 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                           Yesod.Core.Types.HandlerData
                             @ Foundation.App
                             @ ()
                             ds
                             ds2
                             dt
                             (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2 @ Foundation.App)
                             dt1 })
                    } in
                    let {
                      lvl14 :: ()
                               -> Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 2 -}
                      = \ ds :: ()
                          eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                        Yesod.Core.Types.$wa1
                          @ Foundation.App
                          @ GHC.Types.IO
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          a8
                            `cast`
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          Handler.PostNew.getPostNewR32
                            `cast`
                          (<()>_R
                           ->_R Trans
                                    (<Yesod.Core.Types.HandlerData
                                        Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                     ->_R Sym (GHC.Types.NTCo:IO[0]
                                                   ((<()>_R,
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                     <Foundation.App>_N
                                                                     <GHC.Types.IO>_N)))_R)_R))_R))
                                    (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                              <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                          eta
                    } in
                    let {
                      lvl15 :: ()
                               -> Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 2 -}
                      = \ ds :: ()
                          eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                        Yesod.Core.Types.$wa1
                          @ Foundation.App
                          @ GHC.Types.IO
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handler.PostNew.getPostNewR28
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              ((<()>_R,
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                <Foundation.App>_N
                                                                <GHC.Types.IO>_N)))_R)_R))_R))
                               (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                          lvl14
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          eta
                    } in
                    let {
                      lvl16 :: ()
                               -> Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 2 -}
                      = \ ds :: ()
                          eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                        Yesod.Core.Types.$wa1
                          @ Foundation.App
                          @ GHC.Types.IO
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          a7
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              ((<()>_R,
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                <Foundation.App>_N
                                                                <GHC.Types.IO>_N)))_R)_R))_R))
                               (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                          lvl15
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          eta
                    } in
                    let {
                      lvl17 :: ()
                               -> Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 2 -}
                      = \ ds :: ()
                          eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                        Yesod.Core.Types.$wa1
                          @ Foundation.App
                          @ GHC.Types.IO
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handler.PostNew.getPostNewR24
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              ((<()>_R,
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                <Foundation.App>_N
                                                                <GHC.Types.IO>_N)))_R)_R))_R))
                               (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                          lvl16
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          eta
                    } in
                    let {
                      lvl18 :: ()
                               -> Yesod.Core.Types.HandlerData
                                    Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 2 -}
                      = \ ds :: ()
                          eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App
                                   (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                        Yesod.Core.Types.$wa1
                          @ Foundation.App
                          @ GHC.Types.IO
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handler.PostNew.getPostNewR21
                            `cast`
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          lvl17
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          eta
                    } in
                    let {
                      a9 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Types.IO
                                 ((),
                                  Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
                        {- Arity: 1, Strictness: <L,U> -}
                      = \ eta :: Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                        Yesod.Core.Types.$wa1
                          @ Foundation.App
                          @ GHC.Types.IO
                          GHC.Base.$fMonadIO
                          @ ()
                          @ ()
                          Handler.PostNew.getPostNewR17
                            `cast`
                          (Trans
                               (<Yesod.Core.Types.HandlerData
                                   Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                ->_R Sym (GHC.Types.NTCo:IO[0]
                                              ((<()>_R,
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                <Foundation.App>_N
                                                                <GHC.Types.IO>_N)))_R)_R))_R))
                               (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                          lvl18
                            `cast`
                          (<()>_R
                           ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                         <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                          eta
                    } in
                    (\ eta :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                     Yesod.Core.Types.$wa1
                       @ Foundation.App
                       @ GHC.Types.IO
                       GHC.Base.$fMonadIO
                       @ ()
                       @ ()
                       a9
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                 <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                       Handler.PostNew.getPostNewR2
                       eta)
                      `cast`
                    (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                              <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   r
                   ipv } }) -}
ac609c6b7e727ad60dbde5e502df3cd3
  getPostNewR10 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handler.PostNew.getPostNewR13
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handler.PostNew.getPostNewR11
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
b7ba517ed30e11b7ae3df6cd167a174c
  getPostNewR11 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handler.PostNew.getPostNewR12)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
409793bc24b135ee12b59de7e71264b8
  getPostNewR12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "400px"#) -}
7565f2419f9ea78b72595df8d2d0bb20
  getPostNewR13 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handler.PostNew.getPostNewR14)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
bea537bb8d5b6634c9a7b62e69eb79ce
  getPostNewR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "min-height"#) -}
85d6273e8b682c149f8af677f15348fd
  getPostNewR15 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handler.PostNew.getPostNewR16)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
025a29bc9a6448fc024a600cace99499
  getPostNewR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "textarea"#) -}
0a85af53eb7dea3970b78088ef7c1454
  getPostNewR17 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ ds :: Yesod.Core.Types.RY Foundation.App ->
                         Handler.PostNew.getPostNewR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.App>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
0365653511d443b9546809a446800f3d
  getPostNewR18 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.PostNew.getPostNewR19) -}
d5268a77aac354e4b41cc3bb5150d190
  getPostNewR19 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.PostNew.getPostNewR20) -}
49825eb6baac82e92817206a2be313ec
  getPostNewR2 ::
    () -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: (\ ds :: () -> Handler.PostNew.getPostNewR3) -}
1b4559e3963ed80a76646109e18e66b1
  getPostNewR20 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Create a post!</h1>\n\
                   \<form method=\"post\" action=\""#) -}
3e87af3fdfb1e378a138e03beba954bf
  getPostNewR21 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ w4 :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                 Yesod.Core.Types.$wa1
                   @ Foundation.App
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.PostNew.getPostNewR23
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.App>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.PostNew.getPostNewR22
                   w4) -}
9094090e503487a07f2f44da91508013
  getPostNewR22 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ urender :: Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text ->
                 let {
                   a5 :: Data.Text.Internal.Text
                   = urender
                       Foundation.PostNewR
                         `cast`
                       (Sub (Sym (Foundation.TFCo:R:RouteApp[0])))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   a6 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text a5
                 } in
                 let {
                   x :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a6
                 } in
                 let {
                   a7 :: Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
                     {- Arity: 1 -}
                   = \ ds :: Yesod.Core.Types.RY Foundation.App -> x
                 } in
                 let {
                   a8 :: Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       a7
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.NTCo:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl13 :: ((),
                             Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      a8
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N)))_R)_R)
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  (# eta1, lvl13 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     ((<()>_R,
                                       (Yesod.Core.Types.GWData
                                          (Yesod.Routes.Class.Route
                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                       <Foundation.App>_N
                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
f83610f5eb885debd91f1c622c174121
  getPostNewR23 ::
    Yesod.Core.Types.WidgetT
      Foundation.App
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)
                   Foundation.$s$fMonadHandlerWidgetT) -}
22a2cb0a835722b54c695319f58356b6
  getPostNewR24 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ ds :: Yesod.Core.Types.RY Foundation.App ->
                         Handler.PostNew.getPostNewR_x1)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.App>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
a515685a943873534ec7cc14ef223d34
  getPostNewR25 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.PostNew.getPostNewR26) -}
193118b7e2848dd483309ff21144ad64
  getPostNewR26 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.PostNew.getPostNewR27) -}
cc0587d478ae80ec3f2e857364cdb549
  getPostNewR27 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\" enctype=\""#) -}
dac6c3f5da53abedf40b74686ddd0054
  getPostNewR28 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ ds :: Yesod.Core.Types.RY Foundation.App ->
                         Handler.PostNew.getPostNewR_x2)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.App>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
5a13a1abdead5df99b5467e78cdf8ad8
  getPostNewR29 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.PostNew.getPostNewR30) -}
42984e96d7a443edbb7101255baec80f
  getPostNewR3 ::
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$w$ctoWidget
                   @ Foundation.App
                   @ (Yesod.Core.Types.RY Foundation.App)
                   Handler.PostNew.$stoWidget4
                   @ (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)
                   Foundation.$s$fMonadWidgetWidgetT
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                      @ Foundation.App
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                              <Foundation.App>_N <GHC.Types.IO>_N))
                   Handler.PostNew.getPostNewR4) -}
45d1bd238db22c141deb2238773c4c4e
  getPostNewR30 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.PostNew.getPostNewR31) -}
53a19c002f3cec148c0ebee488f667f5
  getPostNewR31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\">"#) -}
cf1024a7506579b826f96a48be074c0a
  getPostNewR32 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handler.PostNew.getPostNewR33 #)) -}
7a29b8642c5d4e8597f968b2287beeca
  getPostNewR33 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.PostNew.getPostNewR34
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N)))_R)_R)) -}
8e9ae5ef633f8a2d438e2c29b66f5319
  getPostNewR34 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Handler.PostNew.getPostNewR35
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
49ee4d0c0bd3615137d2c5dd82172dd2
  getPostNewR35 ::
    Yesod.Core.Types.RY Foundation.App -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.App ->
                 Handler.PostNew.getPostNewR_x3) -}
9ec317b6118d9232380794aaa9cdbdac
  getPostNewR36 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.PostNew.getPostNewR37) -}
ecc4f344b18c2cbbf4e8c893bf842735
  getPostNewR37 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.PostNew.getPostNewR38) -}
03bf585561478e4a442d5707b5093154
  getPostNewR38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<button class=\"btn btn-default\">Create Post!</button>\n\
                   \</form>\n"#) -}
3e0f8152b5ca433aa8e276283b4c85b6
  getPostNewR39 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO (),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Model.BlogPost
                   @ (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ())
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                   Handler.PostNew.getPostNewR40
                     `cast`
                   (<Text.Blaze.Internal.Markup>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Model.BlogPost>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.App>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
82241ca22da7a702d0b154bdb5288747
  getPostNewR4 :: Yesod.Core.Types.RY Foundation.App -> Text.Css.Css
  {- Arity: 1,
     Unfolding: (\ _render :: Yesod.Core.Types.RY Foundation.App ->
                 Handler.PostNew.getPostNewR5) -}
ff11fe1bdabe08a7bf1822d08e63aff6
  getPostNewR40 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Model.BlogPost,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Bootstrap3.renderBootstrap1
                   @ Foundation.Handler
                   @ Model.BlogPost
                   Foundation.$fYesodApp_$s$fMonadHandlerT
                   Yesod.Form.Bootstrap3.BootstrapBasicForm
                   Handler.PostNew.blogPostForm1
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Model.BlogPost>_N))) -}
06d5d2de29ff9243b18c60fff9091068
  getPostNewR5 :: Text.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Css.CssNoWhitespace
                   Handler.PostNew.getPostNewR6) -}
806b6de9d14c9c2b4e762f92a88b212c
  getPostNewR6 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handler.PostNew.getPostNewR7
                   (GHC.Types.[] @ (Text.Css.TopLevel Text.Css.Resolved))) -}
53b63445244ee35a3885d2ef93380a16
  getPostNewR7 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handler.PostNew.getPostNewR8) -}
97cb533ea5e967c492042d70151ab6eb
  getPostNewR8 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handler.PostNew.getPostNewR15
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0])))))
                   Handler.PostNew.getPostNewR9
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
17c48d0c59e7ab2900285770dc1a93de
  getPostNewR9 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handler.PostNew.getPostNewR10
                   (GHC.Types.[] @ (Text.Css.Attr Text.Css.Resolved))) -}
52d92d9c65e88c28d86d268d5e8c2f18
  getPostNewR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.PostNew.getPostNewR18) -}
1dfab18e012853836c1a677447d82d38
  getPostNewR_x1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.PostNew.getPostNewR25) -}
8839ed792d037d709fe421f713a03935
  getPostNewR_x2 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.PostNew.getPostNewR29) -}
2b3ffe5600588fa0ffbd4294de9df259
  getPostNewR_x3 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.PostNew.getPostNewR36) -}
4bb84e24ee90d8096c6e43562798f565
  postPostNewR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.PostNew.postPostNewR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
df1317b6e389fa8e6b4c6b95d302cc99
  postPostNewR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
"SPEC/Handler.PostNew markdownField @ Handler" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                            Foundation.Handler
                                                               $dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                    (Yesod.Core.Class.Handler.HandlerSite
                                                                                       Foundation.Handler)
                                                                                    Yesod.Form.Types.FormMessage
  Yesod.Text.Markdown.markdownField @ (Yesod.Core.Types.HandlerT
                                         Foundation.App GHC.Types.IO)
                                    $dMonad
                                    $dRenderMessage
  = Handler.PostNew.$smarkdownField
"SPEC/Handler.PostNew textField @ Handler" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                        Foundation.Handler
                                                           $dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                (Yesod.Core.Class.Handler.HandlerSite
                                                                                   Foundation.Handler)
                                                                                Yesod.Form.Types.FormMessage
  Yesod.Form.Fields.textField @ (Yesod.Core.Types.HandlerT
                                   Foundation.App GHC.Types.IO)
                              $dMonad
                              $dRenderMessage
  = Handler.PostNew.$stextField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

